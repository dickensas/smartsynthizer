headers.mingw = sys/types.h vulkan/vulkan.h vulkan/vulkan_core.h gtk/gtk.h gdk/gdkevents.h gdk/win32/gdkwin32.h gsk/gsk.h graphene.h librsvg/rsvg.h librsvg/rsvg-cairo.h
headers.linux = sys/types.h vulkan/vulkan.h vulkan/vulkan_core.h gtk/gtk.h gdk/gdkevents.h gdk/x11/gdkx.h gsk/gsk.h graphene.h librsvg/rsvg.h librsvg/rsvg-cairo.h

package = gtk4
headerFilter = sys/* librsvg/* gtk/* gobject/* gio/* gdk/* gdk/win32/* gdk/x11/* glib/* vulkan/* gsk/* gsk/vulkan/* glib* gobject* gsignal* win32* gdkwin32* gdk* gsk* graphene* cairo* vulkan*

libraryPaths.linux = /usr/lib64 /usr/lib/x86_64-linux-gnu
compilerOpts.linux = -DVK_USE_PLATFORM_XLIB_KHR -DGDK_RENDERING_VULKAN -L/usr/lib64 -L/usr/lib/x86_64-linux-gnu -latk-1.0 -lgdk_pixbuf-2.0 -lglib-2.0 -lgtk-4 -lgio-2.0 -lgobject-2.0 -lvulkan1 -lgraphene-1.0 -lcairo -lrsvg-2
linkerOpts.linux = -L/usr/lib64 -L/usr/lib/x86_64-linux-gnu -latk-1.0 -lgdk_pixbuf-2.0 -lglib-2.0 -lgtk-4 -lgio-2.0 -lgobject-2.0 -lvulkan1 -lgraphene-1.0 -lcairo -lrsvg-2

libraryPaths.mingw = C:\\msys64\\mingw64\\lib
compilerOpts.mingw = -DVK_USE_PLATFORM_WIN32_KHR -DGDK_RENDERING_VULKAN -LC:\\msys64\\mingw64\\lib -latk-1.0 -lgdk_pixbuf-2.0 -lglib-2.0 -lgtk-4 -lgio-2.0 -lgobject-2.0 -lvulkan-1.dll -lgraphene-1.0 -lcairo -lrsvg-2
linkerOpts.mingw = -DVK_USE_PLATFORM_WIN32_KHR -DGDK_RENDERING_VULKAN -LC:\\msys64\\mingw64\\lib -latk-1.0 -lgdk_pixbuf-2.0 -lglib-2.0 -lgtk-4 -lgio-2.0 -lgobject-2.0 -lvulkan-1.dll -lgraphene-1.0 -lcairo -lrsvg-2
---
#include <stddef.h>

typedef size_t size_tt;

void inline run_app(GtkApplication *app, int argc, char **argv) {
   g_application_run (G_APPLICATION (app), argc, argv);
}

GtkCellLayout *  _GTK_CELL_LAYOUT(GObject *obj) {
  return GTK_CELL_LAYOUT(obj);
}