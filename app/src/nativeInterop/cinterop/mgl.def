headers.mingw = mgl2/data_cf_bool.h mgl2/mgl_cf.h mgl2/glut.h
headers.linux = mgl2/data_cf_bool.h mgl2/mgl_cf.h mgl2/glut.h

package = mgl

libraryPaths.mingw = C:/msys64/mingw64/lib
linkerOpts.mingw =  -LC:/msys64/mingw64/lib -lmgl2 -lstdc++
compilerOpts.mingw = -LC:/msys64/mingw64/lib -lmgl2 -lstdc++

libraryPaths.linux = /usr/lib64 /usr/lib/x86_64-linux-gnu /usr/lib
linkerOpts.linux = -L/usr/lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib -lmgl -lstdc++
compilerOpts.linux = -L/usr/lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib -lmgl -lstdc++

---
#if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__NT__)
   #ifdef _WIN64
      static inline HMDT _mgl_create_data_size(int sr, int d) {
         return mgl_create_data_size(sr,d,0);
      }
      
      static inline mreal _mgl_data_get_value (HCDT dat, int i, int j, int k) {
         return mgl_data_get_value(dat,i,j,k);
      }
   #else
      static inline HMDT _mgl_create_data_size(int sr, int d) {
         return mgl_create_data_size(sr,d,0);
      }
      
      static inline mreal _mgl_data_get_value (HCDT dat, int i, int j, int k) {
         return mgl_data_get_value(dat,i,j,k);
      }
   #endif
#elif __linux__
   static inline HMDT _mgl_create_data_size(int sr, int d) {
       return mgl_create_data_size((long)sr,d,0);
   }
   
   static inline mreal _mgl_data_get_value (HCDT dat, int i, int j, int k) {
       return mgl_data_get_value(dat,(long)i,j,k);
   }
#endif
